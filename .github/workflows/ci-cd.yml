name: Java CI/CD

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [8, 11, 17]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
        cache: 'maven'
    - name: Build with Maven
      run: mvn test --file pom.xml -B

  build-adopt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'
        cache: 'maven'
    - name: Build with Maven
      run: mvn test --file pom.xml -B

  build-oracle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: 'Set up latest Oracle JDK 17'
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 17
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn test --file pom.xml -B

  build-integration-test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 17]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    needs:
      - "build"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '${{ matrix.java }}'
        cache: 'maven'
    - name: Build with Maven
      env:
        TINIFY_KEY: ${{ secrets.TINIFY_KEY }}
      run: mvn -Pintegration integration-test -B

  build-adopt-integration-test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - "build-adopt"
      - "build"
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'
        cache: 'maven'
    - name: Build with Maven
      env:
        TINIFY_KEY: ${{ secrets.TINIFY_KEY }}
      run: mvn -Pintegration integration-test -B